package reuben.projectandroid.Itinerary;

public class Attraction {

    private int x;

    private static int[][] publicMat = new int[][]{
            {0,  17, 26, 35, 19, 84},
            {17,  0, 31, 38, 24, 85},
            {24, 29,  0, 10, 18, 85},
            {33, 38, 10,  0, 27, 92},
            {18, 23, 19, 28,  0, 83},
            {86, 87, 86, 96, 84,  0}
    };

    private static double[][] publicPriceMat = new double[][]{
            {0.00, 0.83, 1.18, 4.03, 0.88, 1.96},
            {0.83, 0.00, 1.26, 4.03, 0.98, 1.89},
            {1.18, 1.26, 0.00, 2.00, 0.98, 1.99},
            {1.18, 1.26, 0.00, 0.00, 0.98, 1.99},
            {0.88, 0.98, 0.98, 3.98, 0.00, 1.91},
            {1.88, 1.96, 2.11, 4.99, 1.91, 0.00}
    };

    private static int[][] taxiMat = new int[][]{
            {0,   3, 14, 19,  8, 30},
            {6,   0, 13, 18,  8, 29},
            {12, 14,  0,  9, 11, 31},
            {13, 14,  4,  0, 12, 32},
            {7,   8,  9, 14,  0, 30},
            {32, 29, 32, 36, 30,  0}
    };

    private static double[][] taxiPriceMat = new double[][]{
            {0.00,   3.22,  6.96,  8.50,  4.98, 18.40},
            {4.32,   0.00,  7.84,  9.38,  4.76, 18.18},
            {8.30,   7.96,  0.00,  4.54,  6.42, 22.58},
            {8.74,   8.40,  3.22,  0.00,  6.64, 22.80},
            {5.32,   4.76,  4.98,  6.52,  0.00, 18.40},
            {22.48, 19.40, 21.48, 23.68, 21.60,  0.00}
    };

    private static int[][] walkMat = new int[][]{
            {0  , 14 , 69 , 76 , 28 , 269, 215, 28 , 19 , 55 , 135, 14 , 284, 265, 374, 271, 31 , 27 , 136, 209},
            {14 , 0  , 81 , 88 , 39 , 264, 211, 27 , 29 , 51 , 142, 12 , 280, 261, 369, 273, 25 , 26 , 128, 201},
            {69 , 81 , 0  , 12 , 47 , 270, 166, 65 , 91 , 88 , 66 , 68 , 274, 255, 363, 211, 80 , 60 , 141, 269},
            {76 , 88 , 12 , 0  , 55 , 285, 185, 78 , 104, 102, 86 , 81 , 293, 275, 383, 230, 93 , 74 , 157, 282},
            {28 , 39 , 47 , 55 , 0  , 264, 188, 18 , 44 , 49 , 109, 23 , 277, 258, 366, 236, 32 , 12 , 127, 221},
            {269, 264, 270, 285, 264, 0  , 174, 255, 287, 235, 254, 266, 67 , 135, 159, 230, 250, 269, 190, 283},
            {215, 210, 165, 198, 188, 176, 0  , 180, 224, 182, 103, 199, 146, 96 , 203, 70 , 195, 191, 107, 363},
            {27 , 24 , 64 , 90 , 17 , 257, 180, 0  , 37 , 23 , 122, 13 , 256, 238, 246, 232, 15 , 7  , 104, 201},
            {16 , 21 , 86 , 111, 44 , 290, 225, 38 , 0  , 65 , 146, 24 , 293, 275, 383, 274, 39 , 37 , 142, 208},
            {53 , 47 , 87 , 113, 46 , 240, 180, 22 , 62 , 0  , 128, 37 , 237, 219, 327, 237, 26 , 38 , 86 , 201},
            {136, 141, 65 , 85 , 109, 256, 103, 122, 146, 128, 0  , 127, 227, 193, 309, 139, 137, 121, 112, 323},
            {15 , 12 , 67 , 80 , 23 , 269, 200, 14 , 24 , 40 , 128, 0  , 274, 254, 363, 251, 19 , 13 , 122, 202},
            {282, 278, 272, 292, 275, 69 , 145, 256, 292, 238, 226, 271, 0  , 107, 100, 202, 255, 270, 162, 318},
            {263, 259, 253, 273, 256, 137, 95 , 238, 273, 219, 191, 252, 107, 0  , 163, 150, 236, 252, 144, 378},
            {367, 361, 356, 376, 359, 161, 203, 340, 375, 321, 308, 354, 101, 164, 0  , 189, 338, 353, 245, 407},
            {271, 272, 210, 230, 238, 232, 70 , 235, 275, 240, 141, 252, 202, 150, 189, 0  , 251, 241, 171, 426},
            {31 , 25 , 79 , 92 , 32 , 252, 195, 16 , 38 , 27 , 137, 18 , 256, 238, 346, 249, 0  , 22 , 105, 189},
            {28 , 26 , 61 , 74 , 13 , 272, 193, 8  , 37 , 40 , 121, 13 , 272, 254, 361, 240, 23 , 0  , 120, 212},
            {135, 126, 140, 154, 126, 192, 105, 104, 140, 86 , 111, 119, 162, 144, 251, 171, 103, 118, 0  , 269},
            {209, 201, 269, 282, 221, 286, 364, 202, 208, 202, 324, 202, 320, 380, 408, 426, 190, 212, 272, 0  }
    };

    public Attraction(int x) {
        this.x = x;
    }

    public int timeToAttraction(Attraction attraction, int transport) {
        if (transport == 0)
            return taxiMat[this.x][attraction.x];
        else if (transport == 1)
            return publicMat[this.x][attraction.x];
        else
            return walkMat[this.x][attraction.x];
    }

    public double priceToAttraction(Attraction attraction, int transport) {
        if (transport == 0)
            return taxiPriceMat[this.x][attraction.x];
        else if (transport == 1)
            return publicPriceMat[this.x][attraction.x];
        else
            return 0.00;
    }

    public int getX() {
        return x;
    }

    public static void main(String[] args) {
        int total = 0;
        total += publicPriceMat[0][1];
        total += publicPriceMat[1][5];
        total += publicPriceMat[5][2];
        total += publicPriceMat[2][3];
        total += publicPriceMat[3][4];
        total += publicPriceMat[4][0];
        System.out.println(total);
    }

}
